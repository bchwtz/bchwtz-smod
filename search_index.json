[["index.html", "Statistical Modeling Chapter 1 Prerequisites", " Statistical Modeling Benjamin Buchwitz 2021-01-10 Chapter 1 Prerequisites This repo contains course materials. "],["factor-analysis.html", "Chapter 2 Factor Analysis 2.1 Foundations 2.2 Rotation 2.3 Basic Factor Analysis in R Exercises", " Chapter 2 Factor Analysis Statistically speaking the main goal of factor analysis is to describe the covariance structure among many variables in terms of a few underlying, but unobservable random quantities, called factors. This usually happens by assuming that the supposed variables can be organized into (contextually meaningful) groups. The variables in a given group are assumed to be highly correlated and thus represent or are related to a latent construct. While the correlation within a group of variables is high, the correlation between different groups should be low. Following that argumentation it may be possible to condense the information from multiple observed variables within a group into a single unobserved factor variable. While Explanatory Factor Analysis (EFA) aims at finding the mentioned groups Confirmatory Factor Analysis (CFA) aims at confirming an a priori hypothesized variable grouping constellation. While EFA and CFA serve different purposes when doing research, their foundation, especially the model formulation, the estimation and the derivation of quantities of interest is highly comparable and will be presented below. 2.1 Foundations \\[ X_1 - \\mu_1 = l_{11} F_1 + l_{12} F_2 + \\ldots + l_{1m} F_m + \\epsilon_1 \\\\ X_2 - \\mu_2 = l_{21} F_1 + l_{22} F_2 + \\ldots + l_{2m} F_m + \\epsilon_2 \\\\ \\vdots \\\\ X_p - \\mu_p = l_{p1} F_1 + l_{p2} F_2 + \\ldots + l_{pm} F_m + \\epsilon_p \\] Although the equations above seem to be related to multiple regression equations the fact that all quantities on the right hand side are unobseved (in fact only \\(X\\) is observed) distinguishes this factor model from regression problems. The factor analysis model can also be written in matrix notation, which allows for easier derivation of some of the following procedures and thus should be considered valuable as well. \\[ \\underset{p \\times 1}{\\boldsymbol X} = \\underset{p \\times 1}{\\boldsymbol \\mu} + \\underset{p \\times m}{\\boldsymbol L} \\; \\underset{m \\times p}{\\boldsymbol F} + \\underset{p \\times 1}{\\boldsymbol \\epsilon} \\] \\[ \\underset{p \\times 1}{\\boldsymbol X - \\boldsymbol \\mu} = \\underset{p \\times m}{\\boldsymbol L} \\; \\underset{m \\times p}{\\boldsymbol F} + \\underset{p \\times 1}{\\boldsymbol \\epsilon} \\] \\[ \\boldsymbol \\Sigma = Cov(\\boldsymbol X) = \\underset{\\;\\\\Communality}{\\boldsymbol L \\boldsymbol L^T} + \\underset{\\;\\\\Uniqueness}{\\boldsymbol \\Psi} \\] ## Estimation Work in Progress … 2.1.1 Principal Component Method 2.1.2 Principal Factor Solution 2.1.3 Maximum Likelihood Estimation 2.2 Rotation Work in Progress … 2.3 Basic Factor Analysis in R In R there are multiple implementations of factor analysis available. Each model variant and each implementation comes with its own strengths and drawbacks. A good starting point is the factanal() function that comes with the preinstalled stats package. However, more elaborate and flexible approaches are available for download (e.g. in the psych package). In this part we are focusing on the the factor analysis procedure that is implemented in the factanal() function, which performs maximum-likelihood factor analysis on a covariance, correlation or data matrix. For using factanal() four arguments are essential x to input the data, factors to specify the number of factors that should be used, scores to specify the method used to calculate the factor scores and rotation to specify the method for orthogonal or oblique rotation. factanal(x, # Data factors, # Number of factors scores, # Method to calculate factor scores rotation) # Method for rotation While x and factors must be specified by the user the arguments scores and rotation use default values. Factor scores could be calculated either using Thompsons method (scores = \"regression\"), based on Bartlett’s weighted least-squares approach (scores = \"Bartlett\") or not calculated at all (defaul: scores = \"none\"). Applying factor rotation can either be done using the default Varimax option (rotation = \"varimax\") for orthogonal transformation or using rotation = \"Bartlett\" for an oblique transformation. Alternatively results can be obtained without applying a transformation using rotation = \"none\". 2.3.1 Data Description d &lt;- readRDS(&quot;data/big5_responses_DE.rds&quot;) d &lt;- na.omit(d) questionnaire &lt;- d[,26:35] 50 Items - Click to expand! load(&quot;data/big5questions.rda&quot;) items &lt;- q kable_paper(kbl(items), &quot;hover&quot;, full_width = F) ID coding question EXT1 P I am the life of the party. EXT2 N I don’t talk a lot. EXT3 P I feel comfortable around people. EXT4 N I keep in the background. EXT5 P I start conversations. EXT6 N I have little to say. EXT7 P I talk to a lot of different people at parties. EXT8 N I don’t like to draw attention to myself. EXT9 P I don’t mind being the center of attention. EXT10 N I am quiet around strangers. EST1 P I get stressed out easily. EST2 N I am relaxed most of the time. EST3 P I worry about things. EST4 N I seldom feel blue. EST5 P I am easily disturbed. EST6 P I get upset easily. EST7 P I change my mood a lot. EST8 P I have frequent mood swings. EST9 P I get irritated easily. EST10 P I often feel blue. AGR1 N I feel little concern for others. AGR2 P I am interested in people. AGR3 N I insult people. AGR4 P I sympathize with others’ feelings. AGR5 N I am not interested in other people’s problems. AGR6 P I have a soft heart. AGR7 N I am not really interested in others. AGR8 P I take time out for others. AGR9 P I feel others’ emotions. AGR10 P I make people feel at ease. CSN1 P I am always prepared. CSN2 N I leave my belongings around. CSN3 P I pay attention to details. CSN4 N I make a mess of things. CSN5 P I get chores done right away. CSN6 N I often forget to put things back in their proper place. CSN7 P I like order. CSN8 N I shirk my duties. CSN9 P I follow a schedule. CSN10 P I am exacting in my work. OPN1 P I have a rich vocabulary. OPN2 N I have difficulty understanding abstract ideas. OPN3 P I have a vivid imagination. OPN4 N I am not interested in abstract ideas. OPN5 P I have excellent ideas. OPN6 N I do not have a good imagination. OPN7 P I am quick to understand things. OPN8 P I use difficult words. OPN9 P I spend time reflecting on things. OPN10 P I am full of ideas. 2.3.2 Selecting numbers of Factors # Calculate Correlation Matrix, Eigenvalues &amp; Proportion of Variance R &lt;- cor(questionnaire) eigval &lt;- eigen(R)$values proptotvar &lt;- eigval / sum(eigval) # Screeplot plot(eigval, type = &quot;b&quot;, ylab = &quot;Eigenvalue&quot;, xlab=&quot;Index&quot;, xaxt=&quot;n&quot;) axis(1, at=1:length(eigval)) abline(h=1, lty = &quot;dotted&quot;, col=&quot;red&quot;) df &lt;- data.frame(Eigenvalue = eigval, Var=proptotvar, sumVar=cumsum(proptotvar)) knitr::kable(df, digits=4, booktabs=T) Eigenvalue Var sumVar 2.4352 0.2435 0.2435 2.1824 0.2182 0.4618 0.9201 0.0920 0.5538 0.8081 0.0808 0.6346 0.7554 0.0755 0.7101 0.7017 0.0702 0.7803 0.6111 0.0611 0.8414 0.5802 0.0580 0.8994 0.5184 0.0518 0.9513 0.4875 0.0487 1.0000 2.3.3 Applying Factor Analysis fa_none &lt;- factanal(questionnaire , factors = 2, rotation = &quot;none&quot;) fa_varimax &lt;- factanal(questionnaire , factors = 2, rotation = &quot;varimax&quot;) fa_promax &lt;- factanal(questionnaire, factors = 2, rotation = &quot;promax&quot;) par(mfrow = c(1,3)) plot(fa_none$loadings[,1], fa_none$loadings[,2], xlab = &quot;Factor 1&quot;, ylab = &quot;Factor 2&quot;, ylim = c(-1,1), xlim = c(-1,1), main = &quot;No rotation&quot;) abline(h = 0, v = 0, col=&quot;darkgrey&quot;) plot(fa_varimax$loadings[,1], fa_varimax$loadings[,2], xlab = &quot;Factor 1&quot;, ylab = &quot;Factor 2&quot;, ylim = c(-1,1), xlim = c(-1,1), main = &quot;Varimax rotation&quot;) text(fa_varimax$loadings[,1]-0.08, fa_varimax$loadings[,2]+0.08, colnames(questionnaire), col=&quot;blue&quot;) abline(h = 0, v = 0, col=&quot;darkgrey&quot;) plot(fa_promax$loadings[,1], fa_promax$loadings[,2], xlab = &quot;Factor 1&quot;, ylab = &quot;Factor 2&quot;, ylim = c(-1,1), xlim = c(-1,1), main = &quot;Promax rotation&quot;) abline(h = 0, v = 0, col=&quot;darkgrey&quot;) 2.3.4 Interpreting the Factors Exercises ski &lt;- data.frame(skiers = paste0(&quot;S&quot;, c(1:5)), cost = c(32, 61, 59, 36, 62), lift = c(64, 37, 40, 62, 46), depth = c(65, 62, 45, 34, 43), powder = c(67, 65, 43, 35, 40)) "],["system-info.html", "Chapter 3 System Info", " Chapter 3 System Info sessionInfo() ## R version 4.0.3 (2020-10-10) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Catalina 10.15.7 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] kableExtra_1.3.1 knitr_1.30 ## ## loaded via a namespace (and not attached): ## [1] rstudioapi_0.13 xml2_1.3.2 magrittr_2.0.1 rvest_0.3.6 ## [5] munsell_0.5.0 colorspace_2.0-0 viridisLite_0.3.0 R6_2.5.0 ## [9] rlang_0.4.10 stringr_1.4.0 httr_1.4.2 highr_0.8 ## [13] tools_4.0.3 webshot_0.5.2 xfun_0.20 htmltools_0.5.0 ## [17] yaml_2.2.1 digest_0.6.27 lifecycle_0.2.0 bookdown_0.21 ## [21] glue_1.4.2 evaluate_0.14 rmarkdown_2.6 stringi_1.5.3 ## [25] compiler_4.0.3 scales_1.1.1 "]]
